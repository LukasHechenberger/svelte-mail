{"version":3,"file":"index.js","sources":["../../src/index.ts"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\n\nimport { juiceResources, Options as JuiceOptions } from 'juice';\nimport { fromString as getPlainText } from 'html-to-text';\n\ninterface SvelteSSRComponent {\n  render(data: {}): { html: string; css: { code: string }; head: string };\n}\n\nexport async function renderMail(\n  Component: SvelteSSRComponent,\n  { data = {}, ...options }: { data?: {} } & JuiceOptions & HtmlToTextOptions = {}\n): Promise<{\n  html: string;\n  text: string;\n}> {\n  const { html: rawHtml, css, head } = Component.render(data);\n\n  if (head) {\n    // eslint-disable-next-line no-console\n    console.error('Rendering a document head is not supported');\n  }\n\n  const html: string = await new Promise((resolve, reject) => {\n    juiceResources(\n      `${css.code ? `<style>${css.code}</style>` : ''}${rawHtml}`,\n      options,\n      (err, result) => (err ? reject(err) : resolve(result))\n    );\n  });\n\n  return {\n    html,\n    text: getPlainText(html, { ignoreImage: true, ...options }),\n  };\n}\n"],"names":["renderMail","Component","data","options","html","rawHtml","css","head","render","console","error","Promise","resolve","reject","juiceResources","code","err","result","text","getPlainText","ignoreImage"],"mappings":";;;AAAA;AAEA,AAOO,eAAeA,UAAf,CACLC,SADK,EAEL;EAAEC,IAAI,GAAG,EAAT;KAAgBC;IAA8D,EAFzE,EAMJ;QACK;IAAEC,IAAI,EAAEC,OAAR;IAAiBC,GAAjB;IAAsBC;MAASN,SAAS,CAACO,MAAV,CAAiBN,IAAjB,CAArC;;MAEIK,IAAJ,EAAU;;IAERE,OAAO,CAACC,KAAR,CAAc,4CAAd;;;QAGIN,IAAY,GAAG,MAAM,IAAIO,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAC1DC,cAAc,CACX,GAAER,GAAG,CAACS,IAAJ,GAAY,UAAST,GAAG,CAACS,IAAK,UAA9B,GAA0C,EAAG,GAAEV,OAAQ,EAD9C,EAEZF,OAFY,EAGZ,CAACa,GAAD,EAAMC,MAAN,KAAkBD,GAAG,GAAGH,MAAM,CAACG,GAAD,CAAT,GAAiBJ,OAAO,CAACK,MAAD,CAHjC,CAAd;GADyB,CAA3B;SAQO;IACLb,IADK;IAELc,IAAI,EAAEC,UAAY,CAACf,IAAD,EAAO;MAAEgB,WAAW,EAAE,IAAf;SAAwBjB;KAA/B;GAFpB;;;;;"}